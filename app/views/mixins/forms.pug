- const getInputName = (f, property) => `${f.name}[${property}]`
- const getInputId = (f, property) => `${f.name}-${property}`

mixin formFor(f, options = {})
  - const url = _.get(options, 'url');
  - const method = _.get(options, 'method', 'get').toLowerCase();
  - const isStandart = _.includes(['get', 'post'], method);
  form.form-sign(action= url method= isStandart ? method : 'post')
    if !isStandart
      input(name='_method' type='hidden' value= method)
    block

mixin input(f, property, options = { type: 'text' })
  - const name = getInputName(f, property)
  - const id = getInputId(f, property)
  - const value = f.object[property] === undefined ? '' : f.object[property]
  
  .form-group
    label(for= id)= options['label']
    input.form-control(name= name class=(f.errors[property] && 'is-invalid') placeholder= options['placeholder'] type= options['type'] id= id value=`${value}`)
    if f.errors[property]
      .invalid-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin submit(f, value = 'Submit')
  .form-group
    input.btn.btn-lg.btn-primary.btn-block(type='submit' value= value)
