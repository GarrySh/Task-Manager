extends /layouts/application.pug

block content
  .row.justify-content-md-center.mt-5
    .container
      h1.display-5.text-center.mb-3 Registred tasks list
      +formFor(f, { url: urlFor('task.list'), method: 'get' })
        .row.p-3
          a.btn.btn-outline-secondary.mr-2(href= urlFor('task.new')) Add task
          a.btn.btn-outline-secondary(href= urlFor('status')) Modify task status
          input.btn.btn-outline-secondary.mr-3.ml-auto(type='submit' value='Apply filter')
        .table-responsive
          table.table.table-based.table-sm
            thead
              tr
                th ID
                th Task name
                th Description
                th Status
                th Tags
                th Assigned to
                th Creator
            tbody
              tr.table-secondary
                td
                td
                td
                td
                  +selectF(f, 'statusId', { data: statuses })
                td
                  +inputF(f, 'tagsStr')
                td
                  +selectF(f, 'assignedToId', { data: users })
                td
                  +selectF(f, 'creatorId', { data: users })
              each task in tasks
                tr
                  td= task.id
                  td
                    if isSignedIn()
                      a.btn.btn-sm.btn-outline-secondary(href= urlFor('task.edit', task.id))= task.name
                    else
                      a.btn.btn-sm.btn-outline-secondary(href= urlFor('task.display', task.id))= task.name
                  td= task.description
                  td= task.status.name
                  td
                    each tag in task.Tags
                      a.btn.btn-sm.btn-outline-secondary.mr-1(href='#')= tag.name
                  td= task.assignedTo.fullName
                  td= task.creator.fullName
